What happens when you initialize a repository? Why do you need to do it?

Run git init which creates a .git directory containing files and
subdirectories.


How is the staging area different from the working directory and the repository? What value do you think it offers?

The staging area contains the files which will be committed when commit
is next run.  
You can use 'git status' to see which files have been changed but have
not been scheduled for commit.
You can use 'git diff' with no arguments to check which changes will be
committed.


How can you use the staging area to make sure you have one commit per logical change?

If you check the staging area contains only one file this doesn't mean only 
one logical change - also one logiv=cal change could update more than one file.


What are some situations when branches would be helpful in keeping your history
organized? How would branches help?

Keep separate versions like standard and professional in separate branches


How do the diagrams help you visualize the branch structure?

The show the commit tree for different branches.


What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
We get a new single branch from the two merged branches and the diagram shows
this.


What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?


